@startuml
!include <logos/postgresql.puml>
!include <logos/python.puml>
!include <logos/nginx.puml>

!include <c4/C4_Component.puml>

title Notification Service

LAYOUT_LANDSCAPE()


actor Клиент as Client
actor Админ as Admin

Boundary(sources, "Data"){
    Container(auth_ns, "Auth", "api")
    Container(ugc_ns, "UGC", "api")
    Container(movies_admin, "Movie admin", 'api')
    }

Component(mail, "Почтовый сервис", "Yandex")
Component(sms, "Сервис СМС", "?")
Component(push, "Сервис push", "?")

Boundary(notification, "Notification Service") {
    Container(nginx_ns, "Nginx", "<$nginx>", "Держит нагрузку")

    Container(api_ns, "Generator", "Панель управления"){
       Component(api, "Notification API", "FastAPI")
       Component(admin_ns, "Admin panel", "Django")
       Component(template, "Template engine", "jinja2")
       Component(scheduler, "Scheduler", "python")
    }

    ContainerDb(broker, "Broker", "RabbitMQ", "Брокер сообщений")
    ContainerDb(postgresql_ns, "База данных", "<$postgresql>", "Хранит\nуведомеления" )

    Boundary(workers, "Workers") {
        Component(worker_em_ns, "Worker Email", "python")
        Component(worker_sms_ns, "Worker SMS", "python")
        Component(worker_push_ns, "Worker Push", "python")
    }

    Admin --> nginx_ns
    nginx_ns --> api
    nginx_ns --> admin_ns

    postgresql_ns <-- scheduler
    postgresql_ns <-- template

    scheduler <--> api
    admin_ns --> api
    template <-- api

    broker --> worker_em_ns
    broker --> worker_sms_ns
    broker --> worker_push_ns
    api --> broker

    worker_em_ns --> mail
    worker_sms_ns --> sms
    worker_push_ns --> push
}

auth_ns --> nginx_ns
ugc_ns --> nginx_ns
movies_admin --> nginx_ns

mail --> Client
sms --> Client
push --> Client

@enduml