@startuml
!include <logos/flask.puml>
!include <logos/django.puml>
!include <logos/postgresql.puml>
!include <logos/ElasticSearch.puml>
!include <logos/python.puml>
!include <logos/kafka.puml>
'!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml
!include <c4/C4_Component.puml>

title Notification Service

LAYOUT_LANDSCAPE()


actor Клиент as Client
actor Админ as Admin

Container(ugc_ns, "UGC/Auth", "python")
Container(admin_ns, "Admin_films", "python")
Container(recommendation_service, "Recommendation_service", "python")
Boundary(notification, "Notification Service") {
    Container(admin, "Admin", "Cron email creator ")
    ContainerDb(rabbitmq_ns, "RabbitMQ", "RabbitMQ", "Event Broker ")
    ContainerDb(postgresql_ns, "SQL/Mongo",<$postgresql> "Delayed notification storage" )
    ContainerDb(kafka_broker,"Kafka_broker",<$kafka>,"Consistency broker")
    Container(notification_process_ns,"Notification handler" , "Handle notifications")
    Container(worker_em_ns, "Worker Email", "python")
    Container(worker_sms_ns, "Worker SMS", "python")


    ugc_ns --> rabbitmq_ns
    admin_ns --> rabbitmq_ns
    recommendation_service <--> rabbitmq_ns
    rabbitmq_ns --> notification_process_ns
    notification_process_ns --> kafka_broker
    kafka_broker --> worker_em_ns
    kafka_broker --> worker_sms_ns
    Admin --> admin

    worker_em_ns --> Client
    worker_sms_ns --> Client


    postgresql_ns <--> admin
    admin <--> rabbitmq_ns
}


@enduml
