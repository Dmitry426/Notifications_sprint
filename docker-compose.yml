services:
  event_listener_auth:
    build:
      context: .
      dockerfile: ./Dockerfiles/workers/Dockerfile
      target: development
    env_file:
      - ./.env
    command: [ "python", "-m", "workers.event_listeners" , "--queue" , "auth" ]
    volumes:
      - "./workers/event_listeners:/src/workers/event_listeners"
      - "./templates:/src/templates"
    depends_on:
      - rabbitmq

  event_listener_ugc:
    build:
      context: .
      dockerfile: ./Dockerfiles/workers/Dockerfile
      target: development
    env_file:
      - ./.env
    command: [ "python", "-m", "workers.event_listeners" , "--queue" , "ugc" ]
    volumes:
      - "./workers/event_listeners:/src/workers/event_listeners"
      - "./templates:/src/templates"
    depends_on:
      - rabbitmq

  event_listener_websock:
    build:
      context: .
      dockerfile: ./Dockerfiles/workers/Dockerfile
      target: development
    env_file:
      - ./.env
    command: [ "python", "-m", "workers.event_listeners" , "--queue" , "ugc_websocket" ]
    volumes:
      - "./workers/event_listeners:/src/workers/event_listeners"
    depends_on:
      - postgres
      - rabbitmq

  websocket_server:
    build:
      context: .
      dockerfile: ./Dockerfiles/workers/Dockerfile
      target: development
    env_file:
      - ./.env
    command: [ "python", "-m", "workers.messaging_workers" , "--type" , "websocket" ]
    volumes:
      - "./workers/messaging_workers:/src/workers/messaging_workers"
    depends_on:
      - postgres
      - rabbitmq

  websocket_mail:
    build:
      context: .
      dockerfile: ./Dockerfiles/workers/Dockerfile
      target: development
    env_file:
      - ./.env
    command: [ "python", "-m", "workers.messaging_workers" , "--type" , "mail" ]
    volumes:
      - "./workers/messaging_workers:/src/workers/messaging_workers"
    depends_on:
      - rabbitmq


  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    volumes:
      - ./Configs/rabbit/message_event/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./Configs/rabbit/message_event/definitions.json:/etc/rabbitmq/definitions.json:ro
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - ./.env

  postgres:
    image: postgres:13.0-alpine
    environment:
      POSTGRES_USER: ${RABBIT_DB_USER}
      POSTGRES_PASSWORD: ${RABBIT_DB_PASSWORD}
      POSTGRES_DB: ${RABBIT_DB_NAME}
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
      - ./Configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env
    expose:
      - 5432


volumes:
  postgres_volume:
    driver: local
